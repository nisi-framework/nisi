function [Fractal_Derivative] = derivative(Data_Vector,Order_Grid,Delta_t)%% Duplicating datavector to use for every derivate%--------------------------------------------------------------------------%%example:  Data_Vector = [ 1%                          2%                          3 ]%%Order_Grid = [ 1 2 3 4 ]%%comes to ->%%Data_Vector = [ 1 1 1 1%                2 2 2 2%                3 3 3 3 ]%--------------------------------------------------------------------------Order_Grid       = Order_Grid(1,:);Data_Vector      = Data_Vector(:,ones(1,length(Order_Grid)));Size_Data_Vector = size(Data_Vector);%% Creating Binomial Coefficient MatrixBinomial_Coefficient       = zeros(Size_Data_Vector(1),length(Order_Grid));Binomial_Coefficient(1,:)  = ones(1,length(Order_Grid));Binomial_Coefficient(2,:)  = (-1).*Order_Grid;for i=2:Size_Data_Vector(1)-1    Binomial_Coefficient(i+1,:) = (-1).*Binomial_Coefficient(i,:).*(Order_Grid-i+1)/i;  % Note: (OG choose (i+1)) = (OG choose i) * (OG-i)/(i+1) , where the (-1) comes from the (-1)^m end                                                                                     %  --> The second term in the left equation ((Order_Grid-i+1)/i) is different to the one above ((OG-i)/(i+1))                                                                                        %  Explanation: since Matlab does not start a vector at 0, the ith entry in the Matlab-Binomial Coefficient                                                                                        %               is actually the (i-1)st entry in the mathematical Binomial Coefficient.                                                                                             %               Because of that, you have to subtract 1 from each the i in the second term %%Fractional Derivative by Grünwald & Letnikov											%               (which refers to the mathematical i): %--------------------------------------------------------------------------				%               ((OG-i)/(i+1)) --> Matlab conversion --> ((OG-i+1)/(i))% Definition:                                                               			%  Therefore the equation is correct, even if it doesn't look like it at the first glance% D^(q)f(x)=lim(h->0)(( 1/(h^q))* ...% ... {0<=m<Inf}(-1^m * ( q choose m)f(x+(q-m)h))%--------------------------------------------------------------------------Fractal_Derivative = zeros(Size_Data_Vector(1),Size_Data_Vector(2));% buffer             = zeros(Size_Data_Vector(1),1);  % Note: Preallocation not recommended herefor i=1:Size_Data_Vector(2) buffer                  = conv(Data_Vector(:,i) , Binomial_Coefficient(:,i)); Fractal_Derivative(:,i) = buffer(1:Size_Data_Vector(1))./(Delta_t.^Order_Grid(i));endend